name: imagenAEV4

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      # Paso 2: Cambiar al directorio 'AEV4' donde está composer.json
      - name: Cambiar al directorio AEV4
        run: cd AEV4

      # Paso 3: Instalar dependencias con Composer
      - name: Instalar dependencias con Composer
        run: |
          cd AEV4  # Asegúrate de estar en el directorio correcto
          composer install

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p ${{ secrets.DEPLOY_PATH }}"
          rsync -avz --delete --exclude 'vendor' --exclude '.git' . ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.DEPLOY_PATH }}
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd ${{ secrets.DEPLOY_PATH }} && composer install --no-dev --optimize-autoloader"
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} "sudo systemctl restart apache2"

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/imagenaev4:${{ github.sha }} .
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/imagenaev4:${{ github.sha }}